// Generated by CoffeeScript 1.7.1
var http, httpProxy, mapapi, maps, path, proxy, url;

http = require('http');

url = require('url');

path = require('path');

httpProxy = require('http-proxy');

maps = {
  open: url.parse('http://wx.wxtiles.com/'),
  wx: url.parse('http://tiles.metoceanview.com/wx/'),
  sv: url.parse('http://tiles.metoceanview.com/sv/'),
  clim: url.parse('http://tiles.metoceanview.com/clim/'),
  hc: url.parse('http://tiles.metoceanview.com/hc/')
};

proxy = httpProxy.createProxyServer();

proxy.on('proxyReq', function(p, req, res, options) {
  if (req.host != null) {
    return p.setHeader('host', req.host);
  }
});

mapapi = function(target, pathchunks) {
  pathchunks.reverse();
  pathchunks.pop();
  pathchunks.pop();
  pathchunks.pop();
  pathchunks.push('');
  pathchunks.reverse();
  return pathchunks.join('/');
};

http.createServer(function(req, res) {
  var api, apikey, chunks, source, target;
  source = url.parse(req.url);
  path = source.pathname;
  chunks = source.pathname.split('/');
  if (chunks.length < 4 || (maps[chunks[2]] == null)) {
    res.writeHead(404, {
      'Content-Type': 'text/plain'
    });
    res.write('404 Not found');
    res.end();
    return;
  }
  apikey = chunks[1];
  api = chunks[2];
  target = maps[api];
  path = mapapi(target, chunks);
  if (source.search != null) {
    path += source.search;
  }
  source = url.parse(path);
  console.log(source.href);
  req.url = source.href;
  req.host = target.host;
  return proxy.web(req, res, {
    target: target.href
  });
}).listen(8008);
